
// M68HC05 instructions
static const inst_page1 g_m6805_inst_page1_table[256] = {
	// 0x0x, bit manipulation instructions
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRSET, opidx_dir_rel_hdlr_id },
	{ M680X_INS_BRCLR, opidx_dir_rel_hdlr_id },
	// 0x1x, bit set/clear instructions
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	{ M680X_INS_BCLR, opidx_direct_hdlr_id },
	{ M680X_INS_BSET, opidx_direct_hdlr_id },
	// 0x2x, relative branch instructions
	{ M680X_INS_BRA, relative8_hdlr_id },
	{ M680X_INS_BRN, relative8_hdlr_id },
	{ M680X_INS_BHI, relative8_hdlr_id },
	{ M680X_INS_BLS, relative8_hdlr_id },
	{ M680X_INS_BCC, relative8_hdlr_id },
	{ M680X_INS_BCS, relative8_hdlr_id },
	{ M680X_INS_BNE, relative8_hdlr_id },
	{ M680X_INS_BEQ, relative8_hdlr_id },
	{ M680X_INS_BHCC, relative8_hdlr_id },
	{ M680X_INS_BHCS, relative8_hdlr_id },
	{ M680X_INS_BPL, relative8_hdlr_id },
	{ M680X_INS_BMI, relative8_hdlr_id },
	{ M680X_INS_BMC, relative8_hdlr_id },
	{ M680X_INS_BMS, relative8_hdlr_id },
	{ M680X_INS_BIL, relative8_hdlr_id },
	{ M680X_INS_BIH, relative8_hdlr_id },
	// 0x3x, direct instructions
	{ M680X_INS_NEG, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, direct_hdlr_id },
	{ M680X_INS_LSR, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, direct_hdlr_id },
	{ M680X_INS_ASR, direct_hdlr_id },
	{ M680X_INS_LSL, direct_hdlr_id },
	{ M680X_INS_ROL, direct_hdlr_id },
	{ M680X_INS_DEC, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, direct_hdlr_id },
	{ M680X_INS_TST, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLR, direct_hdlr_id },
	// 0x4x, inherent instructions
	{ M680X_INS_NEGA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_MUL, inherent_hdlr_id },
	{ M680X_INS_COMA, inherent_hdlr_id },
	{ M680X_INS_LSRA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_RORA, inherent_hdlr_id },
	{ M680X_INS_ASRA, inherent_hdlr_id },
	{ M680X_INS_LSLA, inherent_hdlr_id },
	{ M680X_INS_ROLA, inherent_hdlr_id },
	{ M680X_INS_DECA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INCA, inherent_hdlr_id },
	{ M680X_INS_TSTA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLRA, inherent_hdlr_id },
	// 0x5x, inherent instructions
	{ M680X_INS_NEGX, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COMX, inherent_hdlr_id },
	{ M680X_INS_LSRX, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_RORX, inherent_hdlr_id },
	{ M680X_INS_ASRX, inherent_hdlr_id },
	{ M680X_INS_LSLX, inherent_hdlr_id },
	{ M680X_INS_ROLX, inherent_hdlr_id },
	{ M680X_INS_DECX, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INCX, inherent_hdlr_id },
	{ M680X_INS_TSTX, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLRX, inherent_hdlr_id },
	// 0x6x, indexed, 1 byte offset instructions
	{ M680X_INS_NEG, indexedX_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, indexedX_hdlr_id },
	{ M680X_INS_LSR, indexedX_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, indexedX_hdlr_id },
	{ M680X_INS_ASR, indexedX_hdlr_id },
	{ M680X_INS_LSL, indexedX_hdlr_id },
	{ M680X_INS_ROL, indexedX_hdlr_id },
	{ M680X_INS_DEC, indexedX_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, indexedX_hdlr_id },
	{ M680X_INS_TST, indexedX_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLR, indexedX_hdlr_id },
	// 0x7x, indexed, no offset instructions
	{ M680X_INS_NEG, indexedX0_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, indexedX0_hdlr_id },
	{ M680X_INS_LSR, indexedX0_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, indexedX0_hdlr_id },
	{ M680X_INS_ASR, indexedX0_hdlr_id },
	{ M680X_INS_LSL, indexedX0_hdlr_id },
	{ M680X_INS_ROL, indexedX0_hdlr_id },
	{ M680X_INS_DEC, indexedX0_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, indexedX0_hdlr_id },
	{ M680X_INS_TST, indexedX0_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLR, indexedX0_hdlr_id },
	// 0x8x, inherent instructions
	{ M680X_INS_RTI, inherent_hdlr_id },
	{ M680X_INS_RTS, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_SWI, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_STOP, inherent_hdlr_id },
	{ M680X_INS_WAIT, inherent_hdlr_id },
	// 0x9x, inherent instructions
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_TAX, inherent_hdlr_id },
	{ M680X_INS_CLC, inherent_hdlr_id },
	{ M680X_INS_SEC, inherent_hdlr_id },
	{ M680X_INS_CLI, inherent_hdlr_id },
	{ M680X_INS_SEI, inherent_hdlr_id },
	{ M680X_INS_RSP, inherent_hdlr_id },
	{ M680X_INS_NOP, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_TXA, inherent_hdlr_id },
	// 0xAx, immediate instructions with reg. A
	{ M680X_INS_SUB, immediate8_hdlr_id },
	{ M680X_INS_CMP, immediate8_hdlr_id },
	{ M680X_INS_SBC, immediate8_hdlr_id },
	{ M680X_INS_CPX, immediate8_hdlr_id },
	{ M680X_INS_AND, immediate8_hdlr_id },
	{ M680X_INS_BIT, immediate8_hdlr_id },
	{ M680X_INS_LDA, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_EOR, immediate8_hdlr_id },
	{ M680X_INS_ADC, immediate8_hdlr_id },
	{ M680X_INS_ORA, immediate8_hdlr_id },
	{ M680X_INS_ADD, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_BSR, relative8_hdlr_id },
	{ M680X_INS_LDX, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	// 0xBx, direct instructions with reg. A
	{ M680X_INS_SUB, direct_hdlr_id },
	{ M680X_INS_CMP, direct_hdlr_id },
	{ M680X_INS_SBC, direct_hdlr_id },
	{ M680X_INS_CPX, direct_hdlr_id },
	{ M680X_INS_AND, direct_hdlr_id },
	{ M680X_INS_BIT, direct_hdlr_id },
	{ M680X_INS_LDA, direct_hdlr_id },
	{ M680X_INS_STA, direct_hdlr_id },
	{ M680X_INS_EOR, direct_hdlr_id },
	{ M680X_INS_ADC, direct_hdlr_id },
	{ M680X_INS_ORA, direct_hdlr_id },
	{ M680X_INS_ADD, direct_hdlr_id },
	{ M680X_INS_JMP, direct_hdlr_id },
	{ M680X_INS_JSR, direct_hdlr_id },
	{ M680X_INS_LDX, direct_hdlr_id },
	{ M680X_INS_STX, direct_hdlr_id },
	// 0xCx, extended instructions with reg. A
	{ M680X_INS_SUB, extended_hdlr_id },
	{ M680X_INS_CMP, extended_hdlr_id },
	{ M680X_INS_SBC, extended_hdlr_id },
	{ M680X_INS_CPX, extended_hdlr_id },
	{ M680X_INS_AND, extended_hdlr_id },
	{ M680X_INS_BIT, extended_hdlr_id },
	{ M680X_INS_LDA, extended_hdlr_id },
	{ M680X_INS_STA, extended_hdlr_id },
	{ M680X_INS_EOR, extended_hdlr_id },
	{ M680X_INS_ADC, extended_hdlr_id },
	{ M680X_INS_ORA, extended_hdlr_id },
	{ M680X_INS_ADD, extended_hdlr_id },
	{ M680X_INS_JMP, extended_hdlr_id },
	{ M680X_INS_JSR, extended_hdlr_id },
	{ M680X_INS_LDX, extended_hdlr_id },
	{ M680X_INS_STX, extended_hdlr_id },
	// 0xDx, indexed with 2 byte offset instructions with reg. A
	{ M680X_INS_SUB, indexedX16_hdlr_id },
	{ M680X_INS_CMP, indexedX16_hdlr_id },
	{ M680X_INS_SBC, indexedX16_hdlr_id },
	{ M680X_INS_CPX, indexedX16_hdlr_id },
	{ M680X_INS_AND, indexedX16_hdlr_id },
	{ M680X_INS_BIT, indexedX16_hdlr_id },
	{ M680X_INS_LDA, indexedX16_hdlr_id },
	{ M680X_INS_STA, indexedX16_hdlr_id },
	{ M680X_INS_EOR, indexedX16_hdlr_id },
	{ M680X_INS_ADC, indexedX16_hdlr_id },
	{ M680X_INS_ORA, indexedX16_hdlr_id },
	{ M680X_INS_ADD, indexedX16_hdlr_id },
	{ M680X_INS_JMP, indexedX16_hdlr_id },
	{ M680X_INS_JSR, indexedX16_hdlr_id },
	{ M680X_INS_LDX, indexedX16_hdlr_id },
	{ M680X_INS_STX, indexedX16_hdlr_id },
	// 0xEx, indexed with 1 byte offset instructions with reg. A
	{ M680X_INS_SUB, indexedX_hdlr_id },
	{ M680X_INS_CMP, indexedX_hdlr_id },
	{ M680X_INS_SBC, indexedX_hdlr_id },
	{ M680X_INS_CPX, indexedX_hdlr_id },
	{ M680X_INS_AND, indexedX_hdlr_id },
	{ M680X_INS_BIT, indexedX_hdlr_id },
	{ M680X_INS_LDA, indexedX_hdlr_id },
	{ M680X_INS_STA, indexedX_hdlr_id },
	{ M680X_INS_EOR, indexedX_hdlr_id },
	{ M680X_INS_ADC, indexedX_hdlr_id },
	{ M680X_INS_ORA, indexedX_hdlr_id },
	{ M680X_INS_ADD, indexedX_hdlr_id },
	{ M680X_INS_JMP, indexedX_hdlr_id },
	{ M680X_INS_JSR, indexedX_hdlr_id },
	{ M680X_INS_LDX, indexedX_hdlr_id },
	{ M680X_INS_STX, indexedX_hdlr_id },
	// 0xFx, indexed without offset instructions with reg. A
	{ M680X_INS_SUB, indexedX0_hdlr_id },
	{ M680X_INS_CMP, indexedX0_hdlr_id },
	{ M680X_INS_SBC, indexedX0_hdlr_id },
	{ M680X_INS_CPX, indexedX0_hdlr_id },
	{ M680X_INS_AND, indexedX0_hdlr_id },
	{ M680X_INS_BIT, indexedX0_hdlr_id },
	{ M680X_INS_LDA, indexedX0_hdlr_id },
	{ M680X_INS_STA, indexedX0_hdlr_id },
	{ M680X_INS_EOR, indexedX0_hdlr_id },
	{ M680X_INS_ADC, indexedX0_hdlr_id },
	{ M680X_INS_ORA, indexedX0_hdlr_id },
	{ M680X_INS_ADD, indexedX0_hdlr_id },
	{ M680X_INS_JMP, indexedX0_hdlr_id },
	{ M680X_INS_JSR, indexedX0_hdlr_id },
	{ M680X_INS_LDX, indexedX0_hdlr_id },
	{ M680X_INS_STX, indexedX0_hdlr_id },
};



// The following array has to be sorted by increasing
// opcodes. Otherwise the binary_search will fail.
//
// Additional instructions only supported on HD6309 PAGE1
static const inst_pageX g_hd6309_inst_overlay_table[] = {
	{ 0x01, M680X_INS_OIM, imm_direct_hdlr_id },
	{ 0x02, M680X_INS_AIM, imm_direct_hdlr_id },
	{ 0x05, M680X_INS_EIM, imm_direct_hdlr_id },
	{ 0x0B, M680X_INS_TIM, imm_direct_hdlr_id },
	{ 0x14, M680X_INS_SEXW, inherent_hdlr_id },
	{ 0x61, M680X_INS_OIM, imm_indexed09_hdlr_id },
	{ 0x62, M680X_INS_AIM, imm_indexed09_hdlr_id },
	{ 0x65, M680X_INS_EIM, imm_indexed09_hdlr_id },
	{ 0x6B, M680X_INS_TIM, imm_indexed09_hdlr_id },
	{ 0x71, M680X_INS_OIM, imm8_extended_hdlr_id },
	{ 0x72, M680X_INS_AIM, imm8_extended_hdlr_id },
	{ 0x75, M680X_INS_EIM, imm8_extended_hdlr_id },
	{ 0x7B, M680X_INS_TIM, imm8_extended_hdlr_id },
	{ 0xCD, M680X_INS_LDQ, immediate32_hdlr_id },
};

// The following array has to be sorted by increasing
// opcodes. Otherwise the binary_search will fail.
//
// HD6309 PAGE2 instructions (with prefix 0x10)
static const inst_pageX g_hd6309_inst_page2_table[] = {
	// 0x2x, relative long branch instructions
	{ 0x21, M680X_INS_LBRN, relative16_hdlr_id },
	{ 0x22, M680X_INS_LBHI, relative16_hdlr_id },
	{ 0x23, M680X_INS_LBLS, relative16_hdlr_id },
	{ 0x24, M680X_INS_LBCC, relative16_hdlr_id },
	{ 0x25, M680X_INS_LBCS, relative16_hdlr_id },
	{ 0x26, M680X_INS_LBNE, relative16_hdlr_id },
	{ 0x27, M680X_INS_LBEQ, relative16_hdlr_id },
	{ 0x28, M680X_INS_LBVC, relative16_hdlr_id },
	{ 0x29, M680X_INS_LBVS, relative16_hdlr_id },
	{ 0x2a, M680X_INS_LBPL, relative16_hdlr_id },
	{ 0x2b, M680X_INS_LBMI, relative16_hdlr_id },
	{ 0x2c, M680X_INS_LBGE, relative16_hdlr_id },
	{ 0x2d, M680X_INS_LBLT, relative16_hdlr_id },
	{ 0x2e, M680X_INS_LBGT, relative16_hdlr_id },
	{ 0x2f, M680X_INS_LBLE, relative16_hdlr_id },
	// 0x3x
	{ 0x30, M680X_INS_ADDR, reg_reg09_hdlr_id },
	{ 0x31, M680X_INS_ADCR, reg_reg09_hdlr_id },
	{ 0x32, M680X_INS_SUBR, reg_reg09_hdlr_id },
	{ 0x33, M680X_INS_SBCR, reg_reg09_hdlr_id },
	{ 0x34, M680X_INS_ANDR, reg_reg09_hdlr_id },
	{ 0x35, M680X_INS_ORR, reg_reg09_hdlr_id },
	{ 0x36, M680X_INS_EORR, reg_reg09_hdlr_id },
	{ 0x37, M680X_INS_CMPR, reg_reg09_hdlr_id },
	{ 0x38, M680X_INS_PSHSW, inherent_hdlr_id },
	{ 0x39, M680X_INS_PULSW, inherent_hdlr_id },
	{ 0x3a, M680X_INS_PSHUW, inherent_hdlr_id },
	{ 0x3b, M680X_INS_PULUW, inherent_hdlr_id },
	{ 0x3f, M680X_INS_SWI2, inherent_hdlr_id },
	// 0x4x, Register D instructions
	{ 0x40, M680X_INS_NEGD, inherent_hdlr_id },
	{ 0x43, M680X_INS_COMD, inherent_hdlr_id },
	{ 0x44, M680X_INS_LSRD, inherent_hdlr_id },
	{ 0x46, M680X_INS_RORD, inherent_hdlr_id },
	{ 0x47, M680X_INS_ASRD, inherent_hdlr_id },
	{ 0x48, M680X_INS_LSLD, inherent_hdlr_id },
	{ 0x49, M680X_INS_ROLD, inherent_hdlr_id },
	{ 0x4a, M680X_INS_DECD, inherent_hdlr_id },
	{ 0x4c, M680X_INS_INCD, inherent_hdlr_id },
	{ 0x4d, M680X_INS_TSTD, inherent_hdlr_id },
	{ 0x4f, M680X_INS_CLRD, inherent_hdlr_id },
	// 0x5x, Register W instructions
	{ 0x53, M680X_INS_COMW, inherent_hdlr_id },
	{ 0x54, M680X_INS_LSRW, inherent_hdlr_id },
	{ 0x56, M680X_INS_RORW, inherent_hdlr_id },
	{ 0x59, M680X_INS_ROLW, inherent_hdlr_id },
	{ 0x5a, M680X_INS_DECW, inherent_hdlr_id },
	{ 0x5c, M680X_INS_INCW, inherent_hdlr_id },
	{ 0x5d, M680X_INS_TSTW, inherent_hdlr_id },
	{ 0x5f, M680X_INS_CLRW, inherent_hdlr_id },
	// 0x8x, immediate instructionY with register D,W,Y
	{ 0x80, M680X_INS_SUBW, immediate16_hdlr_id },
	{ 0x81, M680X_INS_CMPW, immediate16_hdlr_id },
	{ 0x82, M680X_INS_SBCD, immediate16_hdlr_id },
	{ 0x83, M680X_INS_CMPD, immediate16_hdlr_id },
	{ 0x84, M680X_INS_ANDD, immediate16_hdlr_id },
	{ 0x85, M680X_INS_BITD, immediate16_hdlr_id },
	{ 0x86, M680X_INS_LDW, immediate16_hdlr_id },
	{ 0x88, M680X_INS_EORD, immediate16_hdlr_id },
	{ 0x89, M680X_INS_ADCD, immediate16_hdlr_id },
	{ 0x8a, M680X_INS_ORD, immediate16_hdlr_id },
	{ 0x8b, M680X_INS_ADDW, immediate16_hdlr_id },
	{ 0x8c, M680X_INS_CMPY, immediate16_hdlr_id },
	{ 0x8e, M680X_INS_LDY, immediate16_hdlr_id },
	// 0x9x, direct instructions with register D,W,Y
	{ 0x90, M680X_INS_SUBW, direct_hdlr_id },
	{ 0x91, M680X_INS_CMPW, direct_hdlr_id },
	{ 0x92, M680X_INS_SBCD, direct_hdlr_id },
	{ 0x93, M680X_INS_CMPD, direct_hdlr_id },
	{ 0x94, M680X_INS_ANDD, direct_hdlr_id },
	{ 0x95, M680X_INS_BITD, direct_hdlr_id },
	{ 0x96, M680X_INS_LDW, direct_hdlr_id },
	{ 0x97, M680X_INS_STW, direct_hdlr_id },
	{ 0x98, M680X_INS_EORD, direct_hdlr_id },
	{ 0x99, M680X_INS_ADCD, direct_hdlr_id },
	{ 0x9a, M680X_INS_ORD, direct_hdlr_id },
	{ 0x9b, M680X_INS_ADDW, direct_hdlr_id },
	{ 0x9c, M680X_INS_CMPY, direct_hdlr_id },
	{ 0x9e, M680X_INS_LDY, direct_hdlr_id },
	{ 0x9f, M680X_INS_STY, direct_hdlr_id },
	// 0xAx, indexed instructions with register D,W,Y
	{ 0xa0, M680X_INS_SUBW, indexed09_hdlr_id },
	{ 0xa1, M680X_INS_CMPW, indexed09_hdlr_id },
	{ 0xa2, M680X_INS_SBCD, indexed09_hdlr_id },
	{ 0xa3, M680X_INS_CMPD, indexed09_hdlr_id },
	{ 0xa4, M680X_INS_ANDD, indexed09_hdlr_id },
	{ 0xa5, M680X_INS_BITD, indexed09_hdlr_id },
	{ 0xa6, M680X_INS_LDW, indexed09_hdlr_id },
	{ 0xa7, M680X_INS_STW, indexed09_hdlr_id },
	{ 0xa8, M680X_INS_EORD, indexed09_hdlr_id },
	{ 0xa9, M680X_INS_ADCD, indexed09_hdlr_id },
	{ 0xaa, M680X_INS_ORD, indexed09_hdlr_id },
	{ 0xab, M680X_INS_ADDW, indexed09_hdlr_id },
	{ 0xac, M680X_INS_CMPY, indexed09_hdlr_id },
	{ 0xae, M680X_INS_LDY, indexed09_hdlr_id },
	{ 0xaf, M680X_INS_STY, indexed09_hdlr_id },
	// 0xBx, extended instructions with register D,W,Y
	{ 0xb0, M680X_INS_SUBW, extended_hdlr_id },
	{ 0xb1, M680X_INS_CMPW, extended_hdlr_id },
	{ 0xb2, M680X_INS_SBCD, extended_hdlr_id },
	{ 0xb3, M680X_INS_CMPD, extended_hdlr_id },
	{ 0xb4, M680X_INS_ANDD, extended_hdlr_id },
	{ 0xb5, M680X_INS_BITD, extended_hdlr_id },
	{ 0xb6, M680X_INS_LDW, extended_hdlr_id },
	{ 0xb7, M680X_INS_STW, extended_hdlr_id },
	{ 0xb8, M680X_INS_EORD, extended_hdlr_id },
	{ 0xb9, M680X_INS_ADCD, extended_hdlr_id },
	{ 0xba, M680X_INS_ORD, extended_hdlr_id },
	{ 0xbb, M680X_INS_ADDW, extended_hdlr_id },
	{ 0xbc, M680X_INS_CMPY, extended_hdlr_id },
	{ 0xbe, M680X_INS_LDY, extended_hdlr_id },
	{ 0xbf, M680X_INS_STY, extended_hdlr_id },
	// 0xCx, immediate instructions with register S
	{ 0xce, M680X_INS_LDS, immediate16_hdlr_id },
	// 0xDx, direct instructions with register S,Q
	{ 0xdc, M680X_INS_LDQ, direct_hdlr_id },
	{ 0xdd, M680X_INS_STQ, direct_hdlr_id },
	{ 0xde, M680X_INS_LDS, direct_hdlr_id },
	{ 0xdf, M680X_INS_STS, direct_hdlr_id },
	// 0xEx, indexed instructions with register S,Q
	{ 0xec, M680X_INS_LDQ, indexed09_hdlr_id },
	{ 0xed, M680X_INS_STQ, indexed09_hdlr_id },
	{ 0xee, M680X_INS_LDS, indexed09_hdlr_id },
	{ 0xef, M680X_INS_STS, indexed09_hdlr_id },
	// 0xFx, extended instructions with register S,Q
	{ 0xfc, M680X_INS_LDQ, extended_hdlr_id },
	{ 0xfd, M680X_INS_STQ, extended_hdlr_id },
	{ 0xfe, M680X_INS_LDS, extended_hdlr_id },
	{ 0xff, M680X_INS_STS, extended_hdlr_id },
};

// The following array has to be sorted by increasing
// opcodes. Otherwise the binary_search will fail.
//
// HD6309 PAGE3 instructions (with prefix 0x11)
static const inst_pageX g_hd6309_inst_page3_table[] = {
	{ 0x30, M680X_INS_BAND, bit_move_hdlr_id },
	{ 0x31, M680X_INS_BIAND, bit_move_hdlr_id },
	{ 0x32, M680X_INS_BOR, bit_move_hdlr_id },
	{ 0x33, M680X_INS_BIOR, bit_move_hdlr_id },
	{ 0x34, M680X_INS_BEOR, bit_move_hdlr_id },
	{ 0x35, M680X_INS_BIEOR, bit_move_hdlr_id },
	{ 0x36, M680X_INS_LDBT, bit_move_hdlr_id },
	{ 0x37, M680X_INS_STBT, bit_move_hdlr_id },
	{ 0x38, M680X_INS_TFM, tfm_hdlr_id },
	{ 0x39, M680X_INS_TFM, tfm_hdlr_id },
	{ 0x3a, M680X_INS_TFM, tfm_hdlr_id },
	{ 0x3b, M680X_INS_TFM, tfm_hdlr_id },
	{ 0x3c, M680X_INS_BITMD, immediate8_hdlr_id },
	{ 0x3d, M680X_INS_LDMD, immediate8_hdlr_id },
	{ 0x3f, M680X_INS_SWI3, inherent_hdlr_id },
	// 0x4x, Register E instructions
	{ 0x43, M680X_INS_COME, inherent_hdlr_id },
	{ 0x4a, M680X_INS_DECE, inherent_hdlr_id },
	{ 0x4c, M680X_INS_INCE, inherent_hdlr_id },
	{ 0x4d, M680X_INS_TSTE, inherent_hdlr_id },
	{ 0x4f, M680X_INS_CLRE, inherent_hdlr_id },
	// 0x5x, Register F instructions
	{ 0x53, M680X_INS_COMF, inherent_hdlr_id },
	{ 0x5a, M680X_INS_DECF, inherent_hdlr_id },
	{ 0x5c, M680X_INS_INCF, inherent_hdlr_id },
	{ 0x5d, M680X_INS_TSTF, inherent_hdlr_id },
	{ 0x5f, M680X_INS_CLRF, inherent_hdlr_id },
	// 0x8x, immediate instructions with register U,S,E
	{ 0x80, M680X_INS_SUBE, immediate8_hdlr_id },
	{ 0x81, M680X_INS_CMPE, immediate8_hdlr_id },
	{ 0x83, M680X_INS_CMPU, immediate16_hdlr_id },
	{ 0x86, M680X_INS_LDE, immediate8_hdlr_id },
	{ 0x8b, M680X_INS_ADDE, immediate8_hdlr_id },
	{ 0x8c, M680X_INS_CMPS, immediate16_hdlr_id },
	{ 0x8d, M680X_INS_DIVD, immediate8_hdlr_id },
	{ 0x8e, M680X_INS_DIVQ, immediate16_hdlr_id },
	{ 0x8f, M680X_INS_MULD, immediate16_hdlr_id },
	// 0x9x, direct instructions with register U,S,E,Q
	{ 0x90, M680X_INS_SUBE, direct_hdlr_id },
	{ 0x91, M680X_INS_CMPE, direct_hdlr_id },
	{ 0x93, M680X_INS_CMPU, direct_hdlr_id },
	{ 0x96, M680X_INS_LDE, direct_hdlr_id },
	{ 0x97, M680X_INS_STE, direct_hdlr_id },
	{ 0x9b, M680X_INS_ADDE, direct_hdlr_id },
	{ 0x9c, M680X_INS_CMPS, direct_hdlr_id },
	{ 0x9d, M680X_INS_DIVD, direct_hdlr_id },
	{ 0x9e, M680X_INS_DIVQ, direct_hdlr_id },
	{ 0x9f, M680X_INS_MULD, direct_hdlr_id },
	// 0xAx, indexed instructions with register U,S,D,Q
	{ 0xa0, M680X_INS_SUBE, indexed09_hdlr_id },
	{ 0xa1, M680X_INS_CMPE, indexed09_hdlr_id },
	{ 0xa3, M680X_INS_CMPU, indexed09_hdlr_id },
	{ 0xa6, M680X_INS_LDE, indexed09_hdlr_id },
	{ 0xa7, M680X_INS_STE, indexed09_hdlr_id },
	{ 0xab, M680X_INS_ADDE, indexed09_hdlr_id },
	{ 0xac, M680X_INS_CMPS, indexed09_hdlr_id },
	{ 0xad, M680X_INS_DIVD, indexed09_hdlr_id },
	{ 0xae, M680X_INS_DIVQ, indexed09_hdlr_id },
	{ 0xaf, M680X_INS_MULD, indexed09_hdlr_id },
	// 0xBx, extended instructions with register U,S,D,Q
	{ 0xb0, M680X_INS_SUBE, extended_hdlr_id },
	{ 0xb1, M680X_INS_CMPE, extended_hdlr_id },
	{ 0xb3, M680X_INS_CMPU, extended_hdlr_id },
	{ 0xb6, M680X_INS_LDE, extended_hdlr_id },
	{ 0xb7, M680X_INS_STE, extended_hdlr_id },
	{ 0xbb, M680X_INS_ADDE, extended_hdlr_id },
	{ 0xbc, M680X_INS_CMPS, extended_hdlr_id },
	{ 0xbd, M680X_INS_DIVD, extended_hdlr_id },
	{ 0xbe, M680X_INS_DIVQ, extended_hdlr_id },
	{ 0xbf, M680X_INS_MULD, extended_hdlr_id },
	// 0xCx, immediate instructions with register F
	{ 0xc0, M680X_INS_SUBF, immediate8_hdlr_id },
	{ 0xc1, M680X_INS_CMPF, immediate8_hdlr_id },
	{ 0xc6, M680X_INS_LDF, immediate8_hdlr_id },
	{ 0xcb, M680X_INS_ADDF, immediate8_hdlr_id },
	// 0xDx, direct instructions with register F
	{ 0xd0, M680X_INS_SUBF, direct_hdlr_id },
	{ 0xd1, M680X_INS_CMPF, direct_hdlr_id },
	{ 0xd6, M680X_INS_LDF, direct_hdlr_id },
	{ 0xd7, M680X_INS_STF, direct_hdlr_id },
	{ 0xdb, M680X_INS_ADDF, direct_hdlr_id },
	// 0xEx, indexed instructions with register F
	{ 0xe0, M680X_INS_SUBF, indexed09_hdlr_id },
	{ 0xe1, M680X_INS_CMPF, indexed09_hdlr_id },
	{ 0xe6, M680X_INS_LDF, indexed09_hdlr_id },
	{ 0xe7, M680X_INS_STF, indexed09_hdlr_id },
	{ 0xeb, M680X_INS_ADDF, indexed09_hdlr_id },
	// 0xFx, extended instructions with register F
	{ 0xf0, M680X_INS_SUBF, extended_hdlr_id },
	{ 0xf1, M680X_INS_CMPF, extended_hdlr_id },
	{ 0xf6, M680X_INS_LDF, extended_hdlr_id },
	{ 0xf7, M680X_INS_STF, extended_hdlr_id },
	{ 0xfb, M680X_INS_ADDF, extended_hdlr_id },
};



// M6809/HD6309 PAGE1 instructions
static const inst_page1 g_m6809_inst_page1_table[256] = {
	// 0x0x, direct instructions
	{ M680X_INS_NEG, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, direct_hdlr_id },
	{ M680X_INS_LSR, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, direct_hdlr_id },
	{ M680X_INS_ASR, direct_hdlr_id },
	{ M680X_INS_LSL, direct_hdlr_id },
	{ M680X_INS_ROL, direct_hdlr_id },
	{ M680X_INS_DEC, direct_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, direct_hdlr_id },
	{ M680X_INS_TST, direct_hdlr_id },
	{ M680X_INS_JMP, direct_hdlr_id },
	{ M680X_INS_CLR, direct_hdlr_id },
	// 0x1x, misc instructions
	{ M680X_INS_ILLGL, illegal_hdlr_id }, // PAGE2
	{ M680X_INS_ILLGL, illegal_hdlr_id }, // PAGE3
	{ M680X_INS_NOP, inherent_hdlr_id },
	{ M680X_INS_SYNC, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_LBRA, relative16_hdlr_id },
	{ M680X_INS_LBSR, relative16_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_DAA, inherent_hdlr_id },
	{ M680X_INS_ORCC, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ANDCC, immediate8_hdlr_id },
	{ M680X_INS_SEX, inherent_hdlr_id },
	{ M680X_INS_EXG, reg_reg09_hdlr_id },
	{ M680X_INS_TFR, reg_reg09_hdlr_id },
	// 0x2x, relative branch instructions
	{ M680X_INS_BRA, relative8_hdlr_id },
	{ M680X_INS_BRN, relative8_hdlr_id },
	{ M680X_INS_BHI, relative8_hdlr_id },
	{ M680X_INS_BLS, relative8_hdlr_id },
	{ M680X_INS_BCC, relative8_hdlr_id },
	{ M680X_INS_BCS, relative8_hdlr_id },
	{ M680X_INS_BNE, relative8_hdlr_id },
	{ M680X_INS_BEQ, relative8_hdlr_id },
	{ M680X_INS_BVC, relative8_hdlr_id },
	{ M680X_INS_BVS, relative8_hdlr_id },
	{ M680X_INS_BPL, relative8_hdlr_id },
	{ M680X_INS_BMI, relative8_hdlr_id },
	{ M680X_INS_BGE, relative8_hdlr_id },
	{ M680X_INS_BLT, relative8_hdlr_id },
	{ M680X_INS_BGT, relative8_hdlr_id },
	{ M680X_INS_BLE, relative8_hdlr_id },
	// 0x3x, misc instructions
	{ M680X_INS_LEAX, indexed09_hdlr_id },
	{ M680X_INS_LEAY, indexed09_hdlr_id },
	{ M680X_INS_LEAS, indexed09_hdlr_id },
	{ M680X_INS_LEAU, indexed09_hdlr_id },
	{ M680X_INS_PSHS, reg_bits_hdlr_id },
	{ M680X_INS_PULS, reg_bits_hdlr_id },
	{ M680X_INS_PSHU, reg_bits_hdlr_id },
	{ M680X_INS_PULU, reg_bits_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_RTS, inherent_hdlr_id },
	{ M680X_INS_ABX, inherent_hdlr_id },
	{ M680X_INS_RTI, inherent_hdlr_id },
	{ M680X_INS_CWAI, immediate8_hdlr_id },
	{ M680X_INS_MUL, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_SWI, inherent_hdlr_id },
	// 0x4x, Register A instructions
	{ M680X_INS_NEGA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COMA, inherent_hdlr_id },
	{ M680X_INS_LSRA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_RORA, inherent_hdlr_id },
	{ M680X_INS_ASRA, inherent_hdlr_id },
	{ M680X_INS_LSLA, inherent_hdlr_id },
	{ M680X_INS_ROLA, inherent_hdlr_id },
	{ M680X_INS_DECA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INCA, inherent_hdlr_id },
	{ M680X_INS_TSTA, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLRA, inherent_hdlr_id },
	// 0x5x, Register B instructions
	{ M680X_INS_NEGB, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COMB, inherent_hdlr_id },
	{ M680X_INS_LSRB, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_RORB, inherent_hdlr_id },
	{ M680X_INS_ASRB, inherent_hdlr_id },
	{ M680X_INS_LSLB, inherent_hdlr_id },
	{ M680X_INS_ROLB, inherent_hdlr_id },
	{ M680X_INS_DECB, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INCB, inherent_hdlr_id },
	{ M680X_INS_TSTB, inherent_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_CLRB, inherent_hdlr_id },
	// 0x6x, indexed instructions
	{ M680X_INS_NEG, indexed09_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, indexed09_hdlr_id },
	{ M680X_INS_LSR, indexed09_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, indexed09_hdlr_id },
	{ M680X_INS_ASR, indexed09_hdlr_id },
	{ M680X_INS_LSL, indexed09_hdlr_id },
	{ M680X_INS_ROL, indexed09_hdlr_id },
	{ M680X_INS_DEC, indexed09_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, indexed09_hdlr_id },
	{ M680X_INS_TST, indexed09_hdlr_id },
	{ M680X_INS_JMP, indexed09_hdlr_id },
	{ M680X_INS_CLR, indexed09_hdlr_id },
	// 0x7x, extended instructions
	{ M680X_INS_NEG, extended_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_COM, extended_hdlr_id },
	{ M680X_INS_LSR, extended_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_ROR, extended_hdlr_id },
	{ M680X_INS_ASR, extended_hdlr_id },
	{ M680X_INS_LSL, extended_hdlr_id },
	{ M680X_INS_ROL, extended_hdlr_id },
	{ M680X_INS_DEC, extended_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_INC, extended_hdlr_id },
	{ M680X_INS_TST, extended_hdlr_id },
	{ M680X_INS_JMP, extended_hdlr_id },
	{ M680X_INS_CLR, extended_hdlr_id },
	// 0x8x, immediate instructions with Register A,D,X
	{ M680X_INS_SUBA, immediate8_hdlr_id },
	{ M680X_INS_CMPA, immediate8_hdlr_id },
	{ M680X_INS_SBCA, immediate8_hdlr_id },
	{ M680X_INS_SUBD, immediate16_hdlr_id },
	{ M680X_INS_ANDA, immediate8_hdlr_id },
	{ M680X_INS_BITA, immediate8_hdlr_id },
	{ M680X_INS_LDA, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_EORA, immediate8_hdlr_id },
	{ M680X_INS_ADCA, immediate8_hdlr_id },
	{ M680X_INS_ORA, immediate8_hdlr_id },
	{ M680X_INS_ADDA, immediate8_hdlr_id },
	{ M680X_INS_CMPX, immediate16_hdlr_id },
	{ M680X_INS_BSR, relative8_hdlr_id },
	{ M680X_INS_LDX, immediate16_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	// 0x9x, direct instructions with register A,D,X
	{ M680X_INS_SUBA, direct_hdlr_id },
	{ M680X_INS_CMPA, direct_hdlr_id },
	{ M680X_INS_SBCA, direct_hdlr_id },
	{ M680X_INS_SUBD, direct_hdlr_id },
	{ M680X_INS_ANDA, direct_hdlr_id },
	{ M680X_INS_BITA, direct_hdlr_id },
	{ M680X_INS_LDA, direct_hdlr_id },
	{ M680X_INS_STA, direct_hdlr_id },
	{ M680X_INS_EORA, direct_hdlr_id },
	{ M680X_INS_ADCA, direct_hdlr_id },
	{ M680X_INS_ORA, direct_hdlr_id },
	{ M680X_INS_ADDA, direct_hdlr_id },
	{ M680X_INS_CMPX, direct_hdlr_id },
	{ M680X_INS_JSR, direct_hdlr_id },
	{ M680X_INS_LDX, direct_hdlr_id },
	{ M680X_INS_STX, direct_hdlr_id },
	// 0xAx, indexed instructions with Register A,D,X
	{ M680X_INS_SUBA, indexed09_hdlr_id },
	{ M680X_INS_CMPA, indexed09_hdlr_id },
	{ M680X_INS_SBCA, indexed09_hdlr_id },
	{ M680X_INS_SUBD, indexed09_hdlr_id },
	{ M680X_INS_ANDA, indexed09_hdlr_id },
	{ M680X_INS_BITA, indexed09_hdlr_id },
	{ M680X_INS_LDA, indexed09_hdlr_id },
	{ M680X_INS_STA, indexed09_hdlr_id },
	{ M680X_INS_EORA, indexed09_hdlr_id },
	{ M680X_INS_ADCA, indexed09_hdlr_id },
	{ M680X_INS_ORA, indexed09_hdlr_id },
	{ M680X_INS_ADDA, indexed09_hdlr_id },
	{ M680X_INS_CMPX, indexed09_hdlr_id },
	{ M680X_INS_JSR, indexed09_hdlr_id },
	{ M680X_INS_LDX, indexed09_hdlr_id },
	{ M680X_INS_STX, indexed09_hdlr_id },
	// 0xBx, extended instructions with register A,D,X
	{ M680X_INS_SUBA, extended_hdlr_id },
	{ M680X_INS_CMPA, extended_hdlr_id },
	{ M680X_INS_SBCA, extended_hdlr_id },
	{ M680X_INS_SUBD, extended_hdlr_id },
	{ M680X_INS_ANDA, extended_hdlr_id },
	{ M680X_INS_BITA, extended_hdlr_id },
	{ M680X_INS_LDA, extended_hdlr_id },
	{ M680X_INS_STA, extended_hdlr_id },
	{ M680X_INS_EORA, extended_hdlr_id },
	{ M680X_INS_ADCA, extended_hdlr_id },
	{ M680X_INS_ORA, extended_hdlr_id },
	{ M680X_INS_ADDA, extended_hdlr_id },
	{ M680X_INS_CMPX, extended_hdlr_id },
	{ M680X_INS_JSR, extended_hdlr_id },
	{ M680X_INS_LDX, extended_hdlr_id },
	{ M680X_INS_STX, extended_hdlr_id },
	// 0xCx, immediate instructions with register B,D,U
	{ M680X_INS_SUBB, immediate8_hdlr_id },
	{ M680X_INS_CMPB, immediate8_hdlr_id },
	{ M680X_INS_SBCB, immediate8_hdlr_id },
	{ M680X_INS_ADDD, immediate16_hdlr_id },
	{ M680X_INS_ANDB, immediate8_hdlr_id },
	{ M680X_INS_BITB, immediate8_hdlr_id },
	{ M680X_INS_LDB, immediate8_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_EORB, immediate8_hdlr_id },
	{ M680X_INS_ADCB, immediate8_hdlr_id },
	{ M680X_INS_ORB, immediate8_hdlr_id },
	{ M680X_INS_ADDB, immediate8_hdlr_id },
	{ M680X_INS_LDD, immediate16_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	{ M680X_INS_LDU, immediate16_hdlr_id },
	{ M680X_INS_ILLGL, illegal_hdlr_id },
	// 0xDx direct instructions with register B,D,U
	{ M680X_INS_SUBB, direct_hdlr_id },
	{ M680X_INS_CMPB, direct_hdlr_id },
	{ M680X_INS_SBCB, direct_hdlr_id },
	{ M680X_INS_ADDD, direct_hdlr_id },
	{ M680X_INS_ANDB, direct_hdlr_id },
	{ M680X_INS_BITB, direct_hdlr_id },
	{ M680X_INS_LDB, direct_hdlr_id },
	{ M680X_INS_STB, direct_hdlr_id },
	{ M680X_INS_EORB, direct_hdlr_id },
	{ M680X_INS_ADCB, direct_hdlr_id },
	{ M680X_INS_ORB, direct_hdlr_id },
	{ M680X_INS_ADDB, direct_hdlr_id },
	{ M680X_INS_LDD, direct_hdlr_id },
	{ M680X_INS_STD, direct_hdlr_id },
	{ M680X_INS_LDU, direct_hdlr_id },
	{ M680X_INS_STU, direct_hdlr_id },
	// 0xEx, indexed instruction with register B,D,U
	{ M680X_INS_SUBB, indexed09_hdlr_id },
	{ M680X_INS_CMPB, indexed09_hdlr_id },
	{ M680X_INS_SBCB, indexed09_hdlr_id },
	{ M680X_INS_ADDD, indexed09_hdlr_id },
	{ M680X_INS_ANDB, indexed09_hdlr_id },
	{ M680X_INS_BITB, indexed09_hdlr_id },
	{ M680X_INS_LDB, indexed09_hdlr_id },
	{ M680X_INS_STB, indexed09_hdlr_id },
	{ M680X_INS_EORB, indexed09_hdlr_id },
	{ M680X_INS_ADCB, indexed09_hdlr_id },
	{ M680X_INS_ORB, indexed09_hdlr_id },
	{ M680X_INS_ADDB, indexed09_hdlr_id },
	{ M680X_INS_LDD, indexed09_hdlr_id },
	{ M680X_INS_STD, indexed09_hdlr_id },
	{ M680X_INS_LDU, indexed09_hdlr_id },
	{ M680X_INS_STU, indexed09_hdlr_id },
	// 0xFx, extended instructions with register B,D,U
	{ M680X_INS_SUBB, extended_hdlr_id },
	{ M680X_INS_CMPB, extended_hdlr_id },
	{ M680X_INS_SBCB, extended_hdlr_id },
	{ M680X_INS_ADDD, extended_hdlr_id },
	{ M680X_INS_ANDB, extended_hdlr_id },
	{ M680X_INS_BITB, extended_hdlr_id },
	{ M680X_INS_LDB, extended_hdlr_id },
	{ M680X_INS_STB, extended_hdlr_id },
	{ M680X_INS_EORB, extended_hdlr_id },
	{ M680X_INS_ADCB, extended_hdlr_id },
	{ M680X_INS_ORB, extended_hdlr_id },
	{ M680X_INS_ADDB, extended_hdlr_id },
	{ M680X_INS_LDD, extended_hdlr_id },
	{ M680X_INS_STD, extended_hdlr_id },
	{ M680X_INS_LDU, extended_hdlr_id },
	{ M680X_INS_STU, extended_hdlr_id },
};

// The following array has to be sorted by increasing
// opcodes. Otherwise the binary_search will fail.
//
// M6809 PAGE2 instructions (with prefix 0x10)
static const inst_pageX g_m6809_inst_page2_table[] = {
	// 0x2x, relative long branch instructions
	{ 0x21, M680X_INS_LBRN, relative16_hdlr_id },
	{ 0x22, M680X_INS_LBHI, relative16_hdlr_id },
	{ 0x23, M680X_INS_LBLS, relative16_hdlr_id },
	{ 0x24, M680X_INS_LBCC, relative16_hdlr_id },
	{ 0x25, M680X_INS_LBCS, relative16_hdlr_id },
	{ 0x26, M680X_INS_LBNE, relative16_hdlr_id },
	{ 0x27, M680X_INS_LBEQ, relative16_hdlr_id },
	{ 0x28, M680X_INS_LBVC, relative16_hdlr_id },
	{ 0x29, M680X_INS_LBVS, relative16_hdlr_id },
	{ 0x2a, M680X_INS_LBPL, relative16_hdlr_id },
	{ 0x2b, M680X_INS_LBMI, relative16_hdlr_id },
	{ 0x2c, M680X_INS_LBGE, relative16_hdlr_id },
	{ 0x2d, M680X_INS_LBLT, relative16_hdlr_id },
	{ 0x2e, M680X_INS_LBGT, relative16_hdlr_id },
	{ 0x2f, M680X_INS_LBLE, relative16_hdlr_id },
	// 0x3x
	{ 0x3f, M680X_INS_SWI2, inherent_hdlr_id },
	// 0x8x, immediate instructions with register D,Y
	{ 0x83, M680X_INS_CMPD, immediate16_hdlr_id },
	{ 0x8c, M680X_INS_CMPY, immediate16_hdlr_id },
	{ 0x8e, M680X_INS_LDY, immediate16_hdlr_id },
	// 0x9x, direct instructions with register D,Y
	{ 0x93, M680X_INS_CMPD, direct_hdlr_id },
	{ 0x9c, M680X_INS_CMPY, direct_hdlr_id },
	{ 0x9e, M680X_INS_LDY, direct_hdlr_id },
	{ 0x9f, M680X_INS_STY, direct_hdlr_id },
	// 0xAx, indexed instructions with register D,Y
	{ 0xa3, M680X_INS_CMPD, indexed09_hdlr_id },
	{ 0xac, M680X_INS_CMPY, indexed09_hdlr_id },
	{ 0xae, M680X_INS_LDY, indexed09_hdlr_id },
	{ 0xaf, M680X_INS_STY, indexed09_hdlr_id },
	// 0xBx, extended instructions with register D,Y
	{ 0xb3, M680X_INS_CMPD, extended_hdlr_id },
	{ 0xbc, M680X_INS_CMPY, extended_hdlr_id },
	{ 0xbe, M680X_INS_LDY, extended_hdlr_id },
	{ 0xbf, M680X_INS_STY, extended_hdlr_id },
	// 0xCx, immediate instructions with register S
	{ 0xce, M680X_INS_LDS, immediate16_hdlr_id },
	// 0xDx, direct instructions with register S
	{ 0xde, M680X_INS_LDS, direct_hdlr_id },
	{ 0xdf, M680X_INS_STS, direct_hdlr_id },
	// 0xEx, indexed instructions with register S
	{ 0xee, M680X_INS_LDS, indexed09_hdlr_id },
	{ 0xef, M680X_INS_STS, indexed09_hdlr_id },
	// 0xFx, extended instructions with register S
	{ 0xfe, M680X_INS_LDS, extended_hdlr_id },
	{ 0xff, M680X_INS_STS, extended_hdlr_id },
};

// The following array has to be sorted by increasing
// opcodes. Otherwise the binary_search will fail.
//
// M6809 PAGE3 instructions (with prefix 0x11)
static const inst_pageX g_m6809_inst_page3_table[] = {
	{ 0x3f, M680X_INS_SWI3, inherent_hdlr_id },
	// 0x8x, immediate instructions with register U,S
	{ 0x83, M680X_INS_CMPU, immediate16_hdlr_id },
	{ 0x8c, M680X_INS_CMPS, immediate16_hdlr_id },
	// 0x9x, direct instructions with register U,S
	{ 0x93, M680X_INS_CMPU, direct_hdlr_id },
	{ 0x9c, M680X_INS_CMPS, direct_hdlr_id },
	// 0xAx, indexed instructions with register U,S
	{ 0xa3, M680X_INS_CMPU, indexed09_hdlr_id },
	{ 0xac, M680X_INS_CMPS, indexed09_hdlr_id },
	// 0xBx, extended instructions with register U,S
	{ 0xb3, M680X_INS_CMPU, extended_hdlr_id },
	{ 0xbc, M680X_INS_CMPS, extended_hdlr_id },
};

